[
    {
        "id": "d1e2f615.767668",
        "type": "tab",
        "label": "line msg",
        "disabled": false,
        "info": ""
    },
    {
        "id": "315fc6f9.b0f5ea",
        "type": "http in",
        "z": "d1e2f615.767668",
        "name": "",
        "url": "/webhook",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "7180046a.a959fc",
                "9bd7fb46.7668e8",
                "2dc2e2fc.e3361e"
            ]
        ]
    },
    {
        "id": "7180046a.a959fc",
        "type": "http response",
        "z": "d1e2f615.767668",
        "name": "",
        "statusCode": "200",
        "headers": {
            "payload": "foo"
        },
        "x": 360,
        "y": 340,
        "wires": []
    },
    {
        "id": "b41f5de9.cd5eb",
        "type": "comment",
        "z": "d1e2f615.767668",
        "name": "line webhook endpoint",
        "info": "",
        "x": 140,
        "y": 360,
        "wires": []
    },
    {
        "id": "9bd7fb46.7668e8",
        "type": "debug",
        "z": "d1e2f615.767668",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.events[0].replyToken",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 380,
        "wires": []
    },
    {
        "id": "735f0ac9.1f6254",
        "type": "function",
        "z": "d1e2f615.767668",
        "name": "set payload",
        "func": "const event = msg.payload.events[0];\n\nconst replyToken = event.replyToken;\nlet message = event.message.type === 'text' \n  ? {type: 'text', text: event.message.text.toUpperCase()}\n  : event.message\n  \n// search from shopInfo\nconst shouldReplyShopInfo = global\n  .get('shopInfo')\n  .forEach(entry => {\n      const match = entry\n        .keywords\n        .split(',')\n        .some(w => w === event.message.text)\n      // update message if match\n      if (match) {\n        if (entry.type === 'location') {\n          const {type, text: address, title, latitude, longitude} = entry\n          message = {type, title, address, latitude, longitude}\n        } else {\n          message = {type: entry.type, text: entry.text}\n        }\n      }\n  })\n  \n\nmsg.payload = JSON.stringify({\n  replyToken,\n  messages: [message]\n})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "71a47c87.346e34"
            ]
        ]
    },
    {
        "id": "df911cb.d52f1e",
        "type": "http request",
        "z": "d1e2f615.767668",
        "name": "/reply",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.line.me/v2/bot/message/reply",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 680,
        "wires": [
            [
                "5e33a641.ccd078"
            ]
        ]
    },
    {
        "id": "5e33a641.ccd078",
        "type": "debug",
        "z": "d1e2f615.767668",
        "name": "status code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "statusCode",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 680,
        "wires": []
    },
    {
        "id": "2dc2e2fc.e3361e",
        "type": "switch",
        "z": "d1e2f615.767668",
        "name": "",
        "property": "payload.events[0].replyToken",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 540,
        "wires": [
            [
                "43a7d001.c696c"
            ]
        ]
    },
    {
        "id": "6ee00c3a.b402d4",
        "type": "inject",
        "z": "d1e2f615.767668",
        "name": "on start config",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "config",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "7150bcb8.bd9ba4",
                "188113ef.d3ccbc"
            ]
        ]
    },
    {
        "id": "43a7d001.c696c",
        "type": "change",
        "z": "d1e2f615.767668",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reply",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 540,
        "wires": [
            [
                "735f0ac9.1f6254"
            ]
        ]
    },
    {
        "id": "7150bcb8.bd9ba4",
        "type": "change",
        "z": "d1e2f615.767668",
        "name": "global context",
        "rules": [
            {
                "t": "set",
                "p": "channelAccessToken",
                "pt": "global",
                "to": "9HcJQdg/AW9pwBXy/0ucaU3l2YTij+eqDVkMLYfOiOY2Ye+F0NYSODpBEM/Y+hVXesKg/hzgNZtcRgOc7xpxZP9ZA0n/MqjcDu4SJiDvVDu25Mr11A+h47JH4km5dXXO5qmgaTIYfLDAPsW15LkwRgdB04t89/1O/w1cDnyilFU=",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "71a47c87.346e34",
        "type": "function",
        "z": "d1e2f615.767668",
        "name": "set headers",
        "func": "const channelAccessToken = global.get('channelAccessToken')\n\nmsg.headers = {\n    ...msg.headers,\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${channelAccessToken}`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "df911cb.d52f1e"
            ]
        ]
    },
    {
        "id": "40d4a680.fff908",
        "type": "comment",
        "z": "d1e2f615.767668",
        "name": "config global constants",
        "info": "",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "182f1253.a772de",
        "type": "comment",
        "z": "d1e2f615.767668",
        "name": "reply message",
        "info": "https://developers.line.biz/en/docs/messaging-api/sending-messages/#reply-messages",
        "x": 160,
        "y": 500,
        "wires": []
    },
    {
        "id": "188113ef.d3ccbc",
        "type": "google-spreadsheet",
        "z": "d1e2f615.767668",
        "name": "read from accounts",
        "auth": "e00f909a.a408c",
        "sheet": "17yl5bdgyyj8X3axp06wPDwIMbixQ4OryiSpEg5Av8mE",
        "range": "shopInfo!A:G",
        "method": "append",
        "direction": "line",
        "action": "get",
        "clear": false,
        "line": false,
        "column": true,
        "fields": "all",
        "save": "_sheet",
        "selfields": [
            ""
        ],
        "cell_l": "",
        "cell_c": "",
        "input": "payload",
        "output": "payload",
        "saveType": "global",
        "inputType": "msg",
        "outputType": "msg",
        "sheetType": "str",
        "rangeType": "str",
        "cell_lType": "str",
        "cell_cType": "str",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "45782811.451a88"
            ],
            []
        ]
    },
    {
        "id": "87efa2c9.70f3f",
        "type": "function",
        "z": "d1e2f615.767668",
        "name": "",
        "func": "const shopInfo = {}\n\nmsg.payload.forEach(row => {\n    const {name, ...otherProps} = row\n    shopInfo[name] = otherProps\n})\n\nglobal.set('shopInfo', shopInfo)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "45782811.451a88",
        "type": "change",
        "z": "d1e2f615.767668",
        "name": "set shopInfo",
        "rules": [
            {
                "t": "set",
                "p": "shopInfo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e00f909a.a408c",
        "type": "google-service-account",
        "name": "derek-all-access",
        "scope": [
            "https://www.googleapis.com/auth/spreadsheets"
        ],
        "way": "json",
        "check_dialogflow": "",
        "check_speech": ""
    }
]